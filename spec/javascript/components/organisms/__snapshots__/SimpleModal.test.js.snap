// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SimpleModal it should render status type successfully 1`] = `
<SimpleModal
  alert={
    Object {
      "invert": false,
      "message": "Note, you will have the opportunity to grant another household member this preference",
      "subtitle": "This application would no longer be eligible for Live Work Preference",
      "title": "This change will affect this application's preferences",
    }
  }
  handleClose={[MockFunction]}
  header="Update Status"
  isOpen={true}
  onPrimaryClick={[MockFunction]}
  onSecondaryClick={[MockFunction]}
  primary="update"
  secondary="cancel"
  type="status"
>
  <Modal
    handleClose={[MockFunction]}
    isOpen={true}
  >
    <Modal
      ariaHideApp={true}
      bodyOpenClassName="ReactModal__Body--open"
      closeTimeoutMS={0}
      isOpen={true}
      onRequestClose={[MockFunction]}
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      shouldCloseOnEsc={true}
      shouldCloseOnOverlayClick={true}
      shouldFocusAfterRender={true}
      shouldReturnFocusAfterClose={true}
      style={
        Object {
          "content": Object {
            "border": "0",
            "borderRadius": "4px",
            "bottom": "auto",
            "left": "50%",
            "minHeight": "10rem",
            "opacity": "1",
            "overflow": "visible",
            "padding": "0px",
            "position": "fixed",
            "right": "auto",
            "top": "50%",
            "transform": "translate(-50%,-50%)",
            "width": "600px",
          },
          "overlay": Object {
            "backgroundColor": "rgba(0,0,0,0.3)",
          },
        }
      }
    >
      <ModalPortal
        ariaHideApp={true}
        bodyOpenClassName="ReactModal__Body--open"
        closeTimeoutMS={0}
        defaultStyles={
          Object {
            "content": Object {
              "WebkitOverflowScrolling": "touch",
              "background": "#fff",
              "border": "1px solid #ccc",
              "borderRadius": "4px",
              "bottom": "40px",
              "left": "40px",
              "outline": "none",
              "overflow": "auto",
              "padding": "20px",
              "position": "absolute",
              "right": "40px",
              "top": "40px",
            },
            "overlay": Object {
              "backgroundColor": "rgba(255, 255, 255, 0.75)",
              "bottom": 0,
              "left": 0,
              "position": "fixed",
              "right": 0,
              "top": 0,
            },
          }
        }
        isOpen={true}
        onRequestClose={[MockFunction]}
        parentSelector={[Function]}
        portalClassName="ReactModalPortal"
        shouldCloseOnEsc={true}
        shouldCloseOnOverlayClick={true}
        shouldFocusAfterRender={true}
        shouldReturnFocusAfterClose={true}
        style={
          Object {
            "content": Object {
              "border": "0",
              "borderRadius": "4px",
              "bottom": "auto",
              "left": "50%",
              "minHeight": "10rem",
              "opacity": "1",
              "overflow": "visible",
              "padding": "0px",
              "position": "fixed",
              "right": "auto",
              "top": "50%",
              "transform": "translate(-50%,-50%)",
              "width": "600px",
            },
            "overlay": Object {
              "backgroundColor": "rgba(0,0,0,0.3)",
            },
          }
        }
      >
        <div
          aria-modal="true"
          className="ReactModal__Overlay ReactModal__Overlay--after-open"
          onClick={[Function]}
          onMouseDown={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0.3)",
              "bottom": 0,
              "left": 0,
              "position": "fixed",
              "right": 0,
              "top": 0,
            }
          }
        >
          <div
            className="ReactModal__Content ReactModal__Content--after-open"
            onClick={[Function]}
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            style={
              Object {
                "WebkitOverflowScrolling": "touch",
                "background": "#fff",
                "border": "0",
                "borderRadius": "4px",
                "bottom": "auto",
                "left": "50%",
                "minHeight": "10rem",
                "opacity": "1",
                "outline": "none",
                "overflow": "visible",
                "padding": "0px",
                "position": "fixed",
                "right": "auto",
                "top": "50%",
                "transform": "translate(-50%,-50%)",
                "width": "600px",
              }
            }
            tabIndex="-1"
          >
            <SimpleModalBody
              alert={
                Object {
                  "invert": false,
                  "message": "Note, you will have the opportunity to grant another household member this preference",
                  "subtitle": "This application would no longer be eligible for Live Work Preference",
                  "title": "This change will affect this application's preferences",
                }
              }
              handleClose={[MockFunction]}
              header="Update Status"
              onPrimaryClick={[MockFunction]}
              onSecondaryClick={[MockFunction]}
              primary="update"
              secondary="cancel"
              type="status"
            >
              <Component
                handleClose={[MockFunction]}
              >
                <div
                  aria-labelledby="modalTitle"
                  role="dialog"
                >
                  <Component
                    title="Update Status"
                  >
                    <header
                      className="modal-inner margin-top"
                    >
                      <h1
                        className="modal-title t-gamma no-margin"
                      >
                        Update Status
                      </h1>
                    </header>
                  </Component>
                  <Component
                    invert={false}
                    message="Note, you will have the opportunity to grant another household member this preference"
                    subtitle="This application would no longer be eligible for Live Work Preference"
                    title="This change will affect this application's preferences"
                  >
                    <Alert
                      invert={false}
                      message="Note, you will have the opportunity to grant another household member this preference"
                      subtitle="This application would no longer be eligible for Live Work Preference"
                      title="This change will affect this application's preferences"
                    >
                      <div
                        className="alert-box-and-notice"
                      >
                        <AlertBox
                          closeType="text"
                          invert={false}
                          message="This change will affect this application's preferences"
                          noMargin={true}
                        >
                          <div
                            className="alert-box alert no-margin"
                            data-alert={true}
                          >
                            <span
                              className="alert-icon ui-icon ui-medium"
                            >
                              <svg>
                                <use
                                  xlinkHref="#i-warning"
                                />
                              </svg>
                            </span>
                            <p
                              className="alert-body"
                            >
                              This change will affect this application's preferences
                            </p>
                            <button
                              className="button button-link close text"
                              type="button"
                            >
                              Close
                            </button>
                          </div>
                        </AlertBox>
                        <AlertNotice
                          content="Note, you will have the opportunity to grant another household member this preference"
                          invert={false}
                          title="This application would no longer be eligible for Live Work Preference"
                        >
                          <div
                            className="alert-notice alert "
                          >
                            <p
                              className="t-tiny c-alert margin-bottom"
                            >
                              This application would no longer be eligible for Live Work Preference
                            </p>
                            <p
                              className="t-tiny c-steel margin-bottom"
                            >
                              Note, you will have the opportunity to grant another household member this preference
                            </p>
                          </div>
                        </AlertNotice>
                      </div>
                    </Alert>
                  </Component>
                  <Component>
                    <section
                      className="modal-inner"
                    >
                      <div>
                        content
                      </div>
                    </section>
                  </Component>
                  <Component>
                    <footer
                      className="modal-footer bg-dust"
                    >
                      <div
                        className="modal-button-group row"
                      >
                        <div
                          className="modal-button_item modal-button_primary"
                        >
                          <button
                            className="button primary"
                            onClick={[MockFunction]}
                          >
                            update
                          </button>
                        </div>
                        <div
                          className="modal-button_item modal-button_secondary"
                        >
                          <button
                            className="button no-border"
                            onClick={[MockFunction]}
                          >
                            cancel
                          </button>
                        </div>
                      </div>
                    </footer>
                  </Component>
                  <button
                    aria-label="Close modal"
                    className="button button-link close-reveal-modal"
                    onClick={[MockFunction]}
                  >
                    <span
                      className="sr-only"
                    >
                      Close
                    </span>
                    <span
                      className="ui-icon ui-medium i-primary"
                    >
                      <svg>
                        <use
                          xlinkHref="#i-close"
                        />
                      </svg>
                    </span>
                  </button>
                </div>
              </Component>
            </SimpleModalBody>
          </div>
        </div>
      </ModalPortal>
    </Modal>
  </Modal>
</SimpleModal>
`;

exports[`SimpleModal it should render status type successfully 2`] = `
<SimpleModal
  alert={
    Object {
      "invert": false,
      "message": "Note, you will have the opportunity to grant another household member this preference",
      "subtitle": "This application would no longer be eligible for Live Work Preference",
      "title": "This change will affect this application's preferences",
    }
  }
  handleClose={[MockFunction]}
  header="Update Status"
  isOpen={true}
  onPrimaryClick={[MockFunction]}
  onSecondaryClick={[MockFunction]}
  primary="update"
  secondary="cancel"
  type="alert"
>
  <Modal
    handleClose={[MockFunction]}
    isOpen={true}
  >
    <Modal
      ariaHideApp={true}
      bodyOpenClassName="ReactModal__Body--open"
      closeTimeoutMS={0}
      isOpen={true}
      onRequestClose={[MockFunction]}
      parentSelector={[Function]}
      portalClassName="ReactModalPortal"
      shouldCloseOnEsc={true}
      shouldCloseOnOverlayClick={true}
      shouldFocusAfterRender={true}
      shouldReturnFocusAfterClose={true}
      style={
        Object {
          "content": Object {
            "border": "0",
            "borderRadius": "4px",
            "bottom": "auto",
            "left": "50%",
            "minHeight": "10rem",
            "opacity": "1",
            "overflow": "visible",
            "padding": "0px",
            "position": "fixed",
            "right": "auto",
            "top": "50%",
            "transform": "translate(-50%,-50%)",
            "width": "600px",
          },
          "overlay": Object {
            "backgroundColor": "rgba(0,0,0,0.3)",
          },
        }
      }
    >
      <ModalPortal
        ariaHideApp={true}
        bodyOpenClassName="ReactModal__Body--open"
        closeTimeoutMS={0}
        defaultStyles={
          Object {
            "content": Object {
              "WebkitOverflowScrolling": "touch",
              "background": "#fff",
              "border": "1px solid #ccc",
              "borderRadius": "4px",
              "bottom": "40px",
              "left": "40px",
              "outline": "none",
              "overflow": "auto",
              "padding": "20px",
              "position": "absolute",
              "right": "40px",
              "top": "40px",
            },
            "overlay": Object {
              "backgroundColor": "rgba(255, 255, 255, 0.75)",
              "bottom": 0,
              "left": 0,
              "position": "fixed",
              "right": 0,
              "top": 0,
            },
          }
        }
        isOpen={true}
        onRequestClose={[MockFunction]}
        parentSelector={[Function]}
        portalClassName="ReactModalPortal"
        shouldCloseOnEsc={true}
        shouldCloseOnOverlayClick={true}
        shouldFocusAfterRender={true}
        shouldReturnFocusAfterClose={true}
        style={
          Object {
            "content": Object {
              "border": "0",
              "borderRadius": "4px",
              "bottom": "auto",
              "left": "50%",
              "minHeight": "10rem",
              "opacity": "1",
              "overflow": "visible",
              "padding": "0px",
              "position": "fixed",
              "right": "auto",
              "top": "50%",
              "transform": "translate(-50%,-50%)",
              "width": "600px",
            },
            "overlay": Object {
              "backgroundColor": "rgba(0,0,0,0.3)",
            },
          }
        }
      >
        <div
          aria-modal="true"
          className="ReactModal__Overlay ReactModal__Overlay--after-open"
          onClick={[Function]}
          onMouseDown={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,0.3)",
              "bottom": 0,
              "left": 0,
              "position": "fixed",
              "right": 0,
              "top": 0,
            }
          }
        >
          <div
            className="ReactModal__Content ReactModal__Content--after-open"
            onClick={[Function]}
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            style={
              Object {
                "WebkitOverflowScrolling": "touch",
                "background": "#fff",
                "border": "0",
                "borderRadius": "4px",
                "bottom": "auto",
                "left": "50%",
                "minHeight": "10rem",
                "opacity": "1",
                "outline": "none",
                "overflow": "visible",
                "padding": "0px",
                "position": "fixed",
                "right": "auto",
                "top": "50%",
                "transform": "translate(-50%,-50%)",
                "width": "600px",
              }
            }
            tabIndex="-1"
          >
            <SimpleModalBody
              alert={
                Object {
                  "invert": false,
                  "message": "Note, you will have the opportunity to grant another household member this preference",
                  "subtitle": "This application would no longer be eligible for Live Work Preference",
                  "title": "This change will affect this application's preferences",
                }
              }
              handleClose={[MockFunction]}
              header="Update Status"
              onPrimaryClick={[MockFunction]}
              onSecondaryClick={[MockFunction]}
              primary="update"
              secondary="cancel"
              type="alert"
            >
              <Component
                handleClose={[MockFunction]}
              >
                <div
                  aria-labelledby="modalTitle"
                  role="dialog"
                >
                  <Component
                    title="Update Status"
                  >
                    <header
                      className="modal-inner margin-top"
                    >
                      <h1
                        className="modal-title t-gamma no-margin"
                      >
                        Update Status
                      </h1>
                    </header>
                  </Component>
                  <Component
                    invert={false}
                    message="Note, you will have the opportunity to grant another household member this preference"
                    subtitle="This application would no longer be eligible for Live Work Preference"
                    title="This change will affect this application's preferences"
                  >
                    <Alert
                      invert={false}
                      message="Note, you will have the opportunity to grant another household member this preference"
                      subtitle="This application would no longer be eligible for Live Work Preference"
                      title="This change will affect this application's preferences"
                    >
                      <div
                        className="alert-box-and-notice"
                      >
                        <AlertBox
                          closeType="text"
                          invert={false}
                          message="This change will affect this application's preferences"
                          noMargin={true}
                        >
                          <div
                            className="alert-box alert no-margin"
                            data-alert={true}
                          >
                            <span
                              className="alert-icon ui-icon ui-medium"
                            >
                              <svg>
                                <use
                                  xlinkHref="#i-warning"
                                />
                              </svg>
                            </span>
                            <p
                              className="alert-body"
                            >
                              This change will affect this application's preferences
                            </p>
                            <button
                              className="button button-link close text"
                              type="button"
                            >
                              Close
                            </button>
                          </div>
                        </AlertBox>
                        <AlertNotice
                          content="Note, you will have the opportunity to grant another household member this preference"
                          invert={false}
                          title="This application would no longer be eligible for Live Work Preference"
                        >
                          <div
                            className="alert-notice alert "
                          >
                            <p
                              className="t-tiny c-alert margin-bottom"
                            >
                              This application would no longer be eligible for Live Work Preference
                            </p>
                            <p
                              className="t-tiny c-steel margin-bottom"
                            >
                              Note, you will have the opportunity to grant another household member this preference
                            </p>
                          </div>
                        </AlertNotice>
                      </div>
                    </Alert>
                  </Component>
                  <Component>
                    <section
                      className="modal-inner"
                    >
                      <div>
                        content
                      </div>
                    </section>
                  </Component>
                  <Component>
                    <footer
                      className="modal-footer bg-dust"
                    >
                      <div
                        className="modal-button-group row"
                      >
                        <div
                          className="modal-button_item modal-button_primary"
                        >
                          <button
                            className="button alert-fill"
                            onClick={[MockFunction]}
                          >
                            update
                          </button>
                        </div>
                        <div
                          className="modal-button_item modal-button_secondary"
                        >
                          <button
                            className="button no-border"
                            onClick={[MockFunction]}
                          >
                            cancel
                          </button>
                        </div>
                      </div>
                    </footer>
                  </Component>
                  <button
                    aria-label="Close modal"
                    className="button button-link close-reveal-modal"
                    onClick={[MockFunction]}
                  >
                    <span
                      className="sr-only"
                    >
                      Close
                    </span>
                    <span
                      className="ui-icon ui-medium i-primary"
                    >
                      <svg>
                        <use
                          xlinkHref="#i-close"
                        />
                      </svg>
                    </span>
                  </button>
                </div>
              </Component>
            </SimpleModalBody>
          </div>
        </div>
      </ModalPortal>
    </Modal>
  </Modal>
</SimpleModal>
`;
