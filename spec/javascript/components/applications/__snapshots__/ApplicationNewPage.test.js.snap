// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ApplicationNewPage should render succesfully 1`] = `
<ApplicationNewPage
  listing={
    Object {
      "Id": 1,
      "Name": "xxx2",
    }
  }
>
  <CardLayout
    pageHeader={
      Object {
        "title": "New Application: xxx2",
      }
    }
  >
    <PageHeaderLayout
      background="snow"
      title="New Application: xxx2"
    >
      <PageHeaderSimple
        background="snow"
        title="New Application: xxx2"
      >
        <header
          className="lead-header short bg-snow"
        >
          <div
            className="row full-width inner--3x"
          >
            <div
              className="large-12 columns "
            >
              <hgroup
                className="lead-header_group"
              >
                <h1
                  className="lead-header_title small-serif c-oil"
                >
                  New Application: xxx2
                </h1>
              </hgroup>
            </div>
          </div>
        </header>
      </PageHeaderSimple>
    </PageHeaderLayout>
    <ApplicationNewPageForm
      listing={
        Object {
          "Id": 1,
          "Name": "xxx2",
        }
      }
    >
      <PaperApplicationForm
        listing={
          Object {
            "Id": 1,
            "Name": "xxx2",
          }
        }
      >
        <div>
          <t
            defaultValues={Object {}}
            onSubmit={[Function]}
          >
            <Connect(t)
              defaultValues={Object {}}
              onSubmit={[Function]}
              store={
                Object {
                  "dispatch": [Function],
                  "getState": [Function],
                  "replaceReducer": [Function],
                  "subscribe": [Function],
                  Symbol(observable): [Function],
                }
              }
            >
              <t
                defaultValues={Object {}}
                dispatch={[Function]}
                formState={
                  Object {
                    "asyncErrors": Object {},
                    "asyncSuccesses": Object {},
                    "asyncValidations": 0,
                    "asyncWarnings": Object {},
                    "errors": Object {},
                    "submits": 0,
                    "submitted": false,
                    "successes": Object {},
                    "touched": Object {},
                    "validating": Object {},
                    "validationFailed": Object {},
                    "validationFailures": 0,
                    "values": Object {},
                    "warnings": Object {},
                  }
                }
                onSubmit={[Function]}
                store={
                  Object {
                    "dispatch": [Function],
                    "getState": [Function],
                    "replaceReducer": [Function],
                    "subscribe": [Function],
                    Symbol(observable): [Function],
                  }
                }
                storeSubscription={
                  Subscription {
                    "listeners": Object {
                      "clear": [Function],
                      "get": [Function],
                      "notify": [Function],
                      "subscribe": [Function],
                    },
                    "onStateChange": [Function],
                    "parentSub": undefined,
                    "store": Object {
                      "dispatch": [Function],
                      "getState": [Function],
                      "replaceReducer": [Function],
                      "subscribe": [Function],
                      Symbol(observable): [Function],
                    },
                    "unsubscribe": [Function],
                  }
                }
              >
                <form
                  id="shortForm"
                  onSubmit={[Function]}
                >
                  <div
                    className="app-card form-card medium-centered"
                  >
                    <div
                      className="app-inner inset"
                    >
                      <PrimaryApplicantSection
                        formApi={
                          Object {
                            "addValue": [Function],
                            "asyncValidations": 0,
                            "doneValidatingField": [Function],
                            "errors": Object {},
                            "format": [Function],
                            "getError": [Function],
                            "getSuccess": [Function],
                            "getTouched": [Function],
                            "getValue": [Function],
                            "getWarning": [Function],
                            "registerAsyncValidation": [Function],
                            "removeValue": [Function],
                            "reset": [Function],
                            "resetAll": [Function],
                            "setAllValues": [Function],
                            "setError": [Function],
                            "setSuccess": [Function],
                            "setTouched": [Function],
                            "setValue": [Function],
                            "setWarning": [Function],
                            "submitForm": [Function],
                            "submits": 0,
                            "submitted": false,
                            "successes": Object {},
                            "swapValues": [Function],
                            "touched": Object {},
                            "validating": Object {},
                            "validatingField": [Function],
                            "validationFailed": Object {},
                            "validationFailures": 0,
                            "values": Object {},
                            "warnings": Object {},
                          }
                        }
                      >
                        <r
                          field="primaryApplicant"
                        >
                          <c
                            fieldApi={
                              Object {
                                "doneValidatingField": [Function],
                                "getError": [Function],
                                "getSuccess": [Function],
                                "getTouched": [Function],
                                "getValue": [Function],
                                "getWarning": [Function],
                                "registerAsyncValidation": [Function],
                                "reset": [Function],
                                "setError": [Function],
                                "setSuccess": [Function],
                                "setTouched": [Function],
                                "setValue": [Function],
                                "setWarning": [Function],
                                "submits": 0,
                                "submitted": false,
                                "validatingField": [Function],
                              }
                            }
                          >
                            <t
                              defaultValues={Object {}}
                              registerAsyncValidation={[Function]}
                              reset={[Function]}
                              submits={0}
                              submitted={false}
                              update={[Function]}
                            >
                              <Connect(t)
                                defaultValues={Object {}}
                                registerAsyncValidation={[Function]}
                                reset={[Function]}
                                store={
                                  Object {
                                    "dispatch": [Function],
                                    "getState": [Function],
                                    "replaceReducer": [Function],
                                    "subscribe": [Function],
                                    Symbol(observable): [Function],
                                  }
                                }
                                submits={0}
                                submitted={false}
                                update={[Function]}
                              >
                                <t
                                  defaultValues={Object {}}
                                  dispatch={[Function]}
                                  formState={
                                    Object {
                                      "asyncErrors": Object {},
                                      "asyncSuccesses": Object {},
                                      "asyncValidations": 0,
                                      "asyncWarnings": Object {},
                                      "errors": Object {},
                                      "submits": 0,
                                      "submitted": false,
                                      "successes": Object {},
                                      "touched": Object {},
                                      "validating": Object {},
                                      "validationFailed": Object {},
                                      "validationFailures": 0,
                                      "values": Object {},
                                      "warnings": Object {},
                                    }
                                  }
                                  registerAsyncValidation={[Function]}
                                  reset={[Function]}
                                  store={
                                    Object {
                                      "dispatch": [Function],
                                      "getState": [Function],
                                      "replaceReducer": [Function],
                                      "subscribe": [Function],
                                      Symbol(observable): [Function],
                                    }
                                  }
                                  storeSubscription={
                                    Subscription {
                                      "listeners": Object {
                                        "clear": [Function],
                                        "get": [Function],
                                        "notify": [Function],
                                        "subscribe": [Function],
                                      },
                                      "onStateChange": [Function],
                                      "parentSub": undefined,
                                      "store": Object {
                                        "dispatch": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                        Symbol(observable): [Function],
                                      },
                                      "unsubscribe": [Function],
                                    }
                                  }
                                  submits={0}
                                  submitted={false}
                                  update={[Function]}
                                >
                                  <div
                                    className="border-bottom margin-bottom--2x"
                                  >
                                    <div
                                      className="row"
                                    >
                                      <h3>
                                        Primary Applicant
                                      </h3>
                                    </div>
                                    <div
                                      className="row"
                                    >
                                      <div
                                        className="form-group"
                                      >
                                        <div
                                          className="small-4 columns"
                                        >
                                          <label>
                                            First Name 
                                            <span
                                              className="checkbox-block_note no-margin"
                                            >
                                              (required)
                                            </span>
                                          </label>
                                          <r
                                            field="firstName"
                                            required="true"
                                          >
                                            <t
                                              fieldApi={
                                                Object {
                                                  "doneValidatingField": [Function],
                                                  "getError": [Function],
                                                  "getSuccess": [Function],
                                                  "getTouched": [Function],
                                                  "getValue": [Function],
                                                  "getWarning": [Function],
                                                  "registerAsyncValidation": [Function],
                                                  "reset": [Function],
                                                  "setError": [Function],
                                                  "setSuccess": [Function],
                                                  "setTouched": [Function],
                                                  "setValue": [Function],
                                                  "setWarning": [Function],
                                                  "submits": 0,
                                                  "submitted": false,
                                                  "validatingField": [Function],
                                                }
                                              }
                                              required="true"
                                            >
                                              <input
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                required="true"
                                                value=""
                                              />
                                            </t>
                                          </r>
                                        </div>
                                        <div
                                          className="small-4 columns"
                                        >
                                          <label>
                                            Middle Name
                                          </label>
                                          <r
                                            field="middleName"
                                          >
                                            <t
                                              fieldApi={
                                                Object {
                                                  "doneValidatingField": [Function],
                                                  "getError": [Function],
                                                  "getSuccess": [Function],
                                                  "getTouched": [Function],
                                                  "getValue": [Function],
                                                  "getWarning": [Function],
                                                  "registerAsyncValidation": [Function],
                                                  "reset": [Function],
                                                  "setError": [Function],
                                                  "setSuccess": [Function],
                                                  "setTouched": [Function],
                                                  "setValue": [Function],
                                                  "setWarning": [Function],
                                                  "submits": 0,
                                                  "submitted": false,
                                                  "validatingField": [Function],
                                                }
                                              }
                                            >
                                              <input
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                value=""
                                              />
                                            </t>
                                          </r>
                                        </div>
                                        <div
                                          className="small-4 columns"
                                        >
                                          <label>
                                            Last Name 
                                            <span
                                              className="checkbox-block_note no-margin"
                                            >
                                              (required)
                                            </span>
                                          </label>
                                          <r
                                            field="lastName"
                                            required="true"
                                          >
                                            <t
                                              fieldApi={
                                                Object {
                                                  "doneValidatingField": [Function],
                                                  "getError": [Function],
                                                  "getSuccess": [Function],
                                                  "getTouched": [Function],
                                                  "getValue": [Function],
                                                  "getWarning": [Function],
                                                  "registerAsyncValidation": [Function],
                                                  "reset": [Function],
                                                  "setError": [Function],
                                                  "setSuccess": [Function],
                                                  "setTouched": [Function],
                                                  "setValue": [Function],
                                                  "setWarning": [Function],
                                                  "submits": 0,
                                                  "submitted": false,
                                                  "validatingField": [Function],
                                                }
                                              }
                                              required="true"
                                            >
                                              <input
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                required="true"
                                                value=""
                                              />
                                            </t>
                                          </r>
                                        </div>
                                      </div>
                                    </div>
                                    <div
                                      className="row"
                                    >
                                      <div
                                        className="small-4 columns"
                                      >
                                        <label>
                                          Email
                                        </label>
                                        <r
                                          field="email"
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                          >
                                            <input
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value=""
                                            />
                                          </t>
                                        </r>
                                      </div>
                                      <div
                                        className="small-4 columns"
                                      >
                                        <label>
                                          Phone
                                        </label>
                                        <r
                                          field="phone"
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                          >
                                            <input
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value=""
                                            />
                                          </t>
                                        </r>
                                      </div>
                                      <div
                                        className="small-4 columns"
                                      >
                                        <label>
                                          Phone Type
                                        </label>
                                        <r
                                          field="phoneType"
                                          options={
                                            Array [
                                              Object {
                                                "label": "Home",
                                                "value": "Home",
                                              },
                                              Object {
                                                "label": "Cell",
                                                "value": "Cell",
                                              },
                                              Object {
                                                "label": "Work",
                                                "value": "Work",
                                              },
                                            ]
                                          }
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                            options={
                                              Array [
                                                Object {
                                                  "label": "Home",
                                                  "value": "Home",
                                                },
                                                Object {
                                                  "label": "Cell",
                                                  "value": "Cell",
                                                },
                                                Object {
                                                  "label": "Work",
                                                  "value": "Work",
                                                },
                                              ]
                                            }
                                          >
                                            <select
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value={0}
                                            >
                                              <option
                                                disabled={true}
                                                value={0}
                                              >
                                                Select One...
                                              </option>
                                              <option
                                                key="Home"
                                                value={1}
                                              >
                                                Home
                                              </option>
                                              <option
                                                key="Cell"
                                                value={2}
                                              >
                                                Cell
                                              </option>
                                              <option
                                                key="Work"
                                                value={3}
                                              >
                                                Work
                                              </option>
                                            </select>
                                          </t>
                                        </r>
                                      </div>
                                    </div>
                                    <div
                                      className="row"
                                    >
                                      <div
                                        className="small-4 columns"
                                      >
                                        <label>
                                          DOB 
                                          <span
                                            className="checkbox-block_note no-margin"
                                          >
                                            - YYYY-MM-DD (required)
                                          </span>
                                        </label>
                                        <r
                                          dateFormat="YYYY-MM-DD"
                                          dropdownMode="select"
                                          field="DOB"
                                          required={true}
                                          showYearDropdown={true}
                                        >
                                          <DatePickerTextWrapper
                                            dateFormat="YYYY-MM-DD"
                                            dropdownMode="select"
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                            required={true}
                                            showYearDropdown={true}
                                          >
                                            <div>
                                              <DatePicker
                                                allowSameDay={false}
                                                dateFormat="YYYY-MM-DD"
                                                dateFormatCalendar="MMMM YYYY"
                                                disabled={false}
                                                disabledKeyboardNavigation={false}
                                                dropdownMode="select"
                                                monthsShown={1}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                onClickOutside={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onMonthChange={[Function]}
                                                onSelect={[Function]}
                                                required={true}
                                                selected={"2018-04-23T04:00:00.000Z"}
                                                shouldCloseOnSelect={true}
                                                showTimeSelect={false}
                                                showYearDropdown={true}
                                                timeIntervals={30}
                                                withPortal={false}
                                              >
                                                <PopperComponent
                                                  hidePopper={true}
                                                  popperComponent={null}
                                                  popperModifiers={
                                                    Object {
                                                      "preventOverflow": Object {
                                                        "boundariesElement": "viewport",
                                                        "enabled": true,
                                                        "escapeWithReference": true,
                                                      },
                                                    }
                                                  }
                                                  popperPlacement="bottom-start"
                                                  targetComponent={
                                                    <div
                                                      className="react-datepicker__input-container"
                                                    >
                                                      <input
                                                        autoComplete={undefined}
                                                        autoFocus={undefined}
                                                        className=""
                                                        disabled={false}
                                                        id={undefined}
                                                        name={undefined}
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onClick={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        placeholder={undefined}
                                                        readOnly={undefined}
                                                        required={true}
                                                        tabIndex={undefined}
                                                        title={undefined}
                                                        type="text"
                                                        value="2018-04-23"
                                                      />
                                                    </div>
                                                  }
                                                >
                                                  <Manager
                                                    tag="div"
                                                  >
                                                    <div>
                                                      <Target
                                                        className="react-datepicker-wrapper"
                                                      >
                                                        <div
                                                          className="react-datepicker-wrapper"
                                                        >
                                                          <div
                                                            className="react-datepicker__input-container"
                                                          >
                                                            <input
                                                              className=""
                                                              disabled={false}
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              onClick={[Function]}
                                                              onFocus={[Function]}
                                                              onKeyDown={[Function]}
                                                              required={true}
                                                              type="text"
                                                              value="2018-04-23"
                                                            />
                                                          </div>
                                                        </div>
                                                      </Target>
                                                    </div>
                                                  </Manager>
                                                </PopperComponent>
                                              </DatePicker>
                                            </div>
                                          </DatePickerTextWrapper>
                                        </r>
                                      </div>
                                    </div>
                                    <AddressForm
                                      memberType="primaryApplicant"
                                      title="Home Address"
                                    >
                                      <div>
                                        <div
                                          className="row"
                                        >
                                          <h4>
                                            Home Address
                                          </h4>
                                        </div>
                                        <div
                                          className="row"
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <div
                                              className="small-6 columns"
                                            >
                                              <label>
                                                Street Address
                                              </label>
                                              <r
                                                field="address"
                                              >
                                                <t
                                                  fieldApi={
                                                    Object {
                                                      "doneValidatingField": [Function],
                                                      "getError": [Function],
                                                      "getSuccess": [Function],
                                                      "getTouched": [Function],
                                                      "getValue": [Function],
                                                      "getWarning": [Function],
                                                      "registerAsyncValidation": [Function],
                                                      "reset": [Function],
                                                      "setError": [Function],
                                                      "setSuccess": [Function],
                                                      "setTouched": [Function],
                                                      "setValue": [Function],
                                                      "setWarning": [Function],
                                                      "submits": 0,
                                                      "submitted": false,
                                                      "validatingField": [Function],
                                                    }
                                                  }
                                                >
                                                  <input
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    value=""
                                                  />
                                                </t>
                                              </r>
                                            </div>
                                            <div
                                              className="small-6 columns"
                                            >
                                              <label>
                                                City
                                              </label>
                                              <r
                                                field="city"
                                              >
                                                <t
                                                  fieldApi={
                                                    Object {
                                                      "doneValidatingField": [Function],
                                                      "getError": [Function],
                                                      "getSuccess": [Function],
                                                      "getTouched": [Function],
                                                      "getValue": [Function],
                                                      "getWarning": [Function],
                                                      "registerAsyncValidation": [Function],
                                                      "reset": [Function],
                                                      "setError": [Function],
                                                      "setSuccess": [Function],
                                                      "setTouched": [Function],
                                                      "setValue": [Function],
                                                      "setWarning": [Function],
                                                      "submits": 0,
                                                      "submitted": false,
                                                      "validatingField": [Function],
                                                    }
                                                  }
                                                >
                                                  <input
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    value=""
                                                  />
                                                </t>
                                              </r>
                                            </div>
                                            <div
                                              className="small-6 columns"
                                            >
                                              <label>
                                                State
                                              </label>
                                              <r
                                                field="state"
                                                maxLength="2"
                                              >
                                                <t
                                                  fieldApi={
                                                    Object {
                                                      "doneValidatingField": [Function],
                                                      "getError": [Function],
                                                      "getSuccess": [Function],
                                                      "getTouched": [Function],
                                                      "getValue": [Function],
                                                      "getWarning": [Function],
                                                      "registerAsyncValidation": [Function],
                                                      "reset": [Function],
                                                      "setError": [Function],
                                                      "setSuccess": [Function],
                                                      "setTouched": [Function],
                                                      "setValue": [Function],
                                                      "setWarning": [Function],
                                                      "submits": 0,
                                                      "submitted": false,
                                                      "validatingField": [Function],
                                                    }
                                                  }
                                                  maxLength="2"
                                                >
                                                  <input
                                                    maxLength="2"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    value=""
                                                  />
                                                </t>
                                              </r>
                                            </div>
                                            <div
                                              className="small-6 columns"
                                            >
                                              <label>
                                                Zip
                                              </label>
                                              <r
                                                field="zip"
                                              >
                                                <t
                                                  fieldApi={
                                                    Object {
                                                      "doneValidatingField": [Function],
                                                      "getError": [Function],
                                                      "getSuccess": [Function],
                                                      "getTouched": [Function],
                                                      "getValue": [Function],
                                                      "getWarning": [Function],
                                                      "registerAsyncValidation": [Function],
                                                      "reset": [Function],
                                                      "setError": [Function],
                                                      "setSuccess": [Function],
                                                      "setTouched": [Function],
                                                      "setValue": [Function],
                                                      "setWarning": [Function],
                                                      "submits": 0,
                                                      "submitted": false,
                                                      "validatingField": [Function],
                                                    }
                                                  }
                                                >
                                                  <input
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    value=""
                                                  />
                                                </t>
                                              </r>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </AddressForm>
                                    <AddressForm
                                      fieldMap={
                                        Object {
                                          "address": "mailingAddress",
                                          "city": "mailingCity",
                                          "state": "mailingState",
                                          "zip": "mailingZip",
                                        }
                                      }
                                      memberType="primaryApplicant"
                                      title="Mailing Address"
                                    >
                                      <div>
                                        <div
                                          className="row"
                                        >
                                          <h4>
                                            Mailing Address
                                          </h4>
                                        </div>
                                        <div
                                          className="row"
                                        >
                                          <div
                                            className="form-group"
                                          >
                                            <div
                                              className="small-6 columns"
                                            >
                                              <label>
                                                Street Address
                                              </label>
                                              <r
                                                field="mailingAddress"
                                              >
                                                <t
                                                  fieldApi={
                                                    Object {
                                                      "doneValidatingField": [Function],
                                                      "getError": [Function],
                                                      "getSuccess": [Function],
                                                      "getTouched": [Function],
                                                      "getValue": [Function],
                                                      "getWarning": [Function],
                                                      "registerAsyncValidation": [Function],
                                                      "reset": [Function],
                                                      "setError": [Function],
                                                      "setSuccess": [Function],
                                                      "setTouched": [Function],
                                                      "setValue": [Function],
                                                      "setWarning": [Function],
                                                      "submits": 0,
                                                      "submitted": false,
                                                      "validatingField": [Function],
                                                    }
                                                  }
                                                >
                                                  <input
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    value=""
                                                  />
                                                </t>
                                              </r>
                                            </div>
                                            <div
                                              className="small-6 columns"
                                            >
                                              <label>
                                                City
                                              </label>
                                              <r
                                                field="mailingCity"
                                              >
                                                <t
                                                  fieldApi={
                                                    Object {
                                                      "doneValidatingField": [Function],
                                                      "getError": [Function],
                                                      "getSuccess": [Function],
                                                      "getTouched": [Function],
                                                      "getValue": [Function],
                                                      "getWarning": [Function],
                                                      "registerAsyncValidation": [Function],
                                                      "reset": [Function],
                                                      "setError": [Function],
                                                      "setSuccess": [Function],
                                                      "setTouched": [Function],
                                                      "setValue": [Function],
                                                      "setWarning": [Function],
                                                      "submits": 0,
                                                      "submitted": false,
                                                      "validatingField": [Function],
                                                    }
                                                  }
                                                >
                                                  <input
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    value=""
                                                  />
                                                </t>
                                              </r>
                                            </div>
                                            <div
                                              className="small-6 columns"
                                            >
                                              <label>
                                                State
                                              </label>
                                              <r
                                                field="mailingState"
                                                maxLength="2"
                                              >
                                                <t
                                                  fieldApi={
                                                    Object {
                                                      "doneValidatingField": [Function],
                                                      "getError": [Function],
                                                      "getSuccess": [Function],
                                                      "getTouched": [Function],
                                                      "getValue": [Function],
                                                      "getWarning": [Function],
                                                      "registerAsyncValidation": [Function],
                                                      "reset": [Function],
                                                      "setError": [Function],
                                                      "setSuccess": [Function],
                                                      "setTouched": [Function],
                                                      "setValue": [Function],
                                                      "setWarning": [Function],
                                                      "submits": 0,
                                                      "submitted": false,
                                                      "validatingField": [Function],
                                                    }
                                                  }
                                                  maxLength="2"
                                                >
                                                  <input
                                                    maxLength="2"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    value=""
                                                  />
                                                </t>
                                              </r>
                                            </div>
                                            <div
                                              className="small-6 columns"
                                            >
                                              <label>
                                                Zip
                                              </label>
                                              <r
                                                field="mailingZip"
                                              >
                                                <t
                                                  fieldApi={
                                                    Object {
                                                      "doneValidatingField": [Function],
                                                      "getError": [Function],
                                                      "getSuccess": [Function],
                                                      "getTouched": [Function],
                                                      "getValue": [Function],
                                                      "getWarning": [Function],
                                                      "registerAsyncValidation": [Function],
                                                      "reset": [Function],
                                                      "setError": [Function],
                                                      "setSuccess": [Function],
                                                      "setTouched": [Function],
                                                      "setValue": [Function],
                                                      "setWarning": [Function],
                                                      "submits": 0,
                                                      "submitted": false,
                                                      "validatingField": [Function],
                                                    }
                                                  }
                                                >
                                                  <input
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    value=""
                                                  />
                                                </t>
                                              </r>
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </AddressForm>
                                  </div>
                                </t>
                              </Connect(t)>
                            </t>
                          </c>
                        </r>
                      </PrimaryApplicantSection>
                      <AlternateContactSection>
                        <r
                          field="alternateContact"
                        >
                          <c
                            fieldApi={
                              Object {
                                "doneValidatingField": [Function],
                                "getError": [Function],
                                "getSuccess": [Function],
                                "getTouched": [Function],
                                "getValue": [Function],
                                "getWarning": [Function],
                                "registerAsyncValidation": [Function],
                                "reset": [Function],
                                "setError": [Function],
                                "setSuccess": [Function],
                                "setTouched": [Function],
                                "setValue": [Function],
                                "setWarning": [Function],
                                "submits": 0,
                                "submitted": false,
                                "validatingField": [Function],
                              }
                            }
                          >
                            <t
                              defaultValues={Object {}}
                              registerAsyncValidation={[Function]}
                              reset={[Function]}
                              submits={0}
                              submitted={false}
                              update={[Function]}
                            >
                              <Connect(t)
                                defaultValues={Object {}}
                                registerAsyncValidation={[Function]}
                                reset={[Function]}
                                store={
                                  Object {
                                    "dispatch": [Function],
                                    "getState": [Function],
                                    "replaceReducer": [Function],
                                    "subscribe": [Function],
                                    Symbol(observable): [Function],
                                  }
                                }
                                submits={0}
                                submitted={false}
                                update={[Function]}
                              >
                                <t
                                  defaultValues={Object {}}
                                  dispatch={[Function]}
                                  formState={
                                    Object {
                                      "asyncErrors": Object {},
                                      "asyncSuccesses": Object {},
                                      "asyncValidations": 0,
                                      "asyncWarnings": Object {},
                                      "errors": Object {},
                                      "submits": 0,
                                      "submitted": false,
                                      "successes": Object {},
                                      "touched": Object {},
                                      "validating": Object {},
                                      "validationFailed": Object {},
                                      "validationFailures": 0,
                                      "values": Object {},
                                      "warnings": Object {},
                                    }
                                  }
                                  registerAsyncValidation={[Function]}
                                  reset={[Function]}
                                  store={
                                    Object {
                                      "dispatch": [Function],
                                      "getState": [Function],
                                      "replaceReducer": [Function],
                                      "subscribe": [Function],
                                      Symbol(observable): [Function],
                                    }
                                  }
                                  storeSubscription={
                                    Subscription {
                                      "listeners": Object {
                                        "clear": [Function],
                                        "get": [Function],
                                        "notify": [Function],
                                        "subscribe": [Function],
                                      },
                                      "onStateChange": [Function],
                                      "parentSub": undefined,
                                      "store": Object {
                                        "dispatch": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                        Symbol(observable): [Function],
                                      },
                                      "unsubscribe": [Function],
                                    }
                                  }
                                  submits={0}
                                  submitted={false}
                                  update={[Function]}
                                >
                                  <div
                                    className="border-bottom margin-bottom--2x"
                                  >
                                    <div
                                      className="row"
                                    >
                                      <h3>
                                        Alternate Contact
                                      </h3>
                                    </div>
                                    <div
                                      className="row"
                                    >
                                      <div
                                        className="form-group"
                                      >
                                        <div
                                          className="small-4 columns"
                                        >
                                          <label>
                                            First Name
                                          </label>
                                          <r
                                            field="firstName"
                                          >
                                            <t
                                              fieldApi={
                                                Object {
                                                  "doneValidatingField": [Function],
                                                  "getError": [Function],
                                                  "getSuccess": [Function],
                                                  "getTouched": [Function],
                                                  "getValue": [Function],
                                                  "getWarning": [Function],
                                                  "registerAsyncValidation": [Function],
                                                  "reset": [Function],
                                                  "setError": [Function],
                                                  "setSuccess": [Function],
                                                  "setTouched": [Function],
                                                  "setValue": [Function],
                                                  "setWarning": [Function],
                                                  "submits": 0,
                                                  "submitted": false,
                                                  "validatingField": [Function],
                                                }
                                              }
                                            >
                                              <input
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                value=""
                                              />
                                            </t>
                                          </r>
                                        </div>
                                        <div
                                          className="small-4 columns"
                                        >
                                          <label>
                                            Middle Name
                                          </label>
                                          <r
                                            field="middleName"
                                          >
                                            <t
                                              fieldApi={
                                                Object {
                                                  "doneValidatingField": [Function],
                                                  "getError": [Function],
                                                  "getSuccess": [Function],
                                                  "getTouched": [Function],
                                                  "getValue": [Function],
                                                  "getWarning": [Function],
                                                  "registerAsyncValidation": [Function],
                                                  "reset": [Function],
                                                  "setError": [Function],
                                                  "setSuccess": [Function],
                                                  "setTouched": [Function],
                                                  "setValue": [Function],
                                                  "setWarning": [Function],
                                                  "submits": 0,
                                                  "submitted": false,
                                                  "validatingField": [Function],
                                                }
                                              }
                                            >
                                              <input
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                value=""
                                              />
                                            </t>
                                          </r>
                                        </div>
                                        <div
                                          className="small-4 columns"
                                        >
                                          <label>
                                            Last Name
                                          </label>
                                          <r
                                            field="lastName"
                                          >
                                            <t
                                              fieldApi={
                                                Object {
                                                  "doneValidatingField": [Function],
                                                  "getError": [Function],
                                                  "getSuccess": [Function],
                                                  "getTouched": [Function],
                                                  "getValue": [Function],
                                                  "getWarning": [Function],
                                                  "registerAsyncValidation": [Function],
                                                  "reset": [Function],
                                                  "setError": [Function],
                                                  "setSuccess": [Function],
                                                  "setTouched": [Function],
                                                  "setValue": [Function],
                                                  "setWarning": [Function],
                                                  "submits": 0,
                                                  "submitted": false,
                                                  "validatingField": [Function],
                                                }
                                              }
                                            >
                                              <input
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                value=""
                                              />
                                            </t>
                                          </r>
                                        </div>
                                      </div>
                                    </div>
                                    <div
                                      className="row"
                                    >
                                      <div
                                        className="small-4 columns"
                                      >
                                        <label>
                                          Alternate Contact Type
                                        </label>
                                        <r
                                          field="alternateContactType"
                                          options={
                                            Array [
                                              Object {
                                                "label": "Family Member",
                                                "value": "Family Member",
                                              },
                                              Object {
                                                "label": "Friend",
                                                "value": "Friend",
                                              },
                                              Object {
                                                "label": "Social Worker or Housing Counselor",
                                                "value": "Social Worker or Housing Counselor",
                                              },
                                              Object {
                                                "label": "Other",
                                                "value": "Other",
                                              },
                                            ]
                                          }
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                            options={
                                              Array [
                                                Object {
                                                  "label": "Family Member",
                                                  "value": "Family Member",
                                                },
                                                Object {
                                                  "label": "Friend",
                                                  "value": "Friend",
                                                },
                                                Object {
                                                  "label": "Social Worker or Housing Counselor",
                                                  "value": "Social Worker or Housing Counselor",
                                                },
                                                Object {
                                                  "label": "Other",
                                                  "value": "Other",
                                                },
                                              ]
                                            }
                                          >
                                            <select
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value={0}
                                            >
                                              <option
                                                disabled={true}
                                                value={0}
                                              >
                                                Select One...
                                              </option>
                                              <option
                                                key="Family Member"
                                                value={1}
                                              >
                                                Family Member
                                              </option>
                                              <option
                                                key="Friend"
                                                value={2}
                                              >
                                                Friend
                                              </option>
                                              <option
                                                key="Social Worker or Housing Counselor"
                                                value={3}
                                              >
                                                Social Worker or Housing Counselor
                                              </option>
                                              <option
                                                key="Other"
                                                value={4}
                                              >
                                                Other
                                              </option>
                                            </select>
                                          </t>
                                        </r>
                                      </div>
                                      <div
                                        className="small-4 columns"
                                      >
                                        <label>
                                          Alternate Contact Type Other
                                        </label>
                                        <r
                                          field="alternateContactTypeOther"
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                          >
                                            <input
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value=""
                                            />
                                          </t>
                                        </r>
                                      </div>
                                      <div
                                        className="small-4 columns"
                                      >
                                        <label>
                                          Agency (if applicable)
                                        </label>
                                        <r
                                          field="agency"
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                          >
                                            <input
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value=""
                                            />
                                          </t>
                                        </r>
                                      </div>
                                    </div>
                                    <div
                                      className="row"
                                    >
                                      <div
                                        className="small-4 columns"
                                      >
                                        <label>
                                          Email
                                        </label>
                                        <r
                                          field="email"
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                          >
                                            <input
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value=""
                                            />
                                          </t>
                                        </r>
                                      </div>
                                      <div
                                        className="small-4 columns"
                                      >
                                        <label>
                                          Phone
                                        </label>
                                        <r
                                          field="phone"
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                          >
                                            <input
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value=""
                                            />
                                          </t>
                                        </r>
                                      </div>
                                      <div
                                        className="small-4 columns"
                                      >
                                        <label>
                                          Phone Type
                                        </label>
                                        <r
                                          field="phoneType"
                                          options={
                                            Array [
                                              Object {
                                                "label": "Home",
                                                "value": "Home",
                                              },
                                              Object {
                                                "label": "Cell",
                                                "value": "Cell",
                                              },
                                              Object {
                                                "label": "Work",
                                                "value": "Work",
                                              },
                                            ]
                                          }
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                            options={
                                              Array [
                                                Object {
                                                  "label": "Home",
                                                  "value": "Home",
                                                },
                                                Object {
                                                  "label": "Cell",
                                                  "value": "Cell",
                                                },
                                                Object {
                                                  "label": "Work",
                                                  "value": "Work",
                                                },
                                              ]
                                            }
                                          >
                                            <select
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value={0}
                                            >
                                              <option
                                                disabled={true}
                                                value={0}
                                              >
                                                Select One...
                                              </option>
                                              <option
                                                key="Home"
                                                value={1}
                                              >
                                                Home
                                              </option>
                                              <option
                                                key="Cell"
                                                value={2}
                                              >
                                                Cell
                                              </option>
                                              <option
                                                key="Work"
                                                value={3}
                                              >
                                                Work
                                              </option>
                                            </select>
                                          </t>
                                        </r>
                                      </div>
                                    </div>
                                  </div>
                                </t>
                              </Connect(t)>
                            </t>
                          </c>
                        </r>
                      </AlternateContactSection>
                      <HouseholdMembersSection
                        formApi={
                          Object {
                            "addValue": [Function],
                            "asyncValidations": 0,
                            "doneValidatingField": [Function],
                            "errors": Object {},
                            "format": [Function],
                            "getError": [Function],
                            "getSuccess": [Function],
                            "getTouched": [Function],
                            "getValue": [Function],
                            "getWarning": [Function],
                            "registerAsyncValidation": [Function],
                            "removeValue": [Function],
                            "reset": [Function],
                            "resetAll": [Function],
                            "setAllValues": [Function],
                            "setError": [Function],
                            "setSuccess": [Function],
                            "setTouched": [Function],
                            "setValue": [Function],
                            "setWarning": [Function],
                            "submitForm": [Function],
                            "submits": 0,
                            "submitted": false,
                            "successes": Object {},
                            "swapValues": [Function],
                            "touched": Object {},
                            "validating": Object {},
                            "validatingField": [Function],
                            "validationFailed": Object {},
                            "validationFailures": 0,
                            "values": Object {},
                            "warnings": Object {},
                          }
                        }
                      >
                        <div
                          className="border-bottom margin-bottom--2x"
                        >
                          <div
                            className="row"
                          >
                            <h3>
                              Household Members
                            </h3>
                          </div>
                          <div
                            className="row"
                          >
                            <div
                              className="form-group"
                            >
                              <div
                                className="small-4 columns"
                              >
                                <button
                                  className="mb-4 mr-4 btn btn-success"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  + Additional Member
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </HouseholdMembersSection>
                      <ReservedPrioritySection
                        listing={
                          Object {
                            "Id": 1,
                            "Name": "xxx2",
                          }
                        }
                      >
                        <div
                          className="border-bottom margin-bottom--2x"
                        >
                          <div
                            className="row"
                          >
                            <div
                              className="small-12 columns"
                            >
                              <h3>
                                Reserved and Priority Qualifying Information
                              </h3>
                              <h4>
                                Qualifying Information For a Reserved Unit
                              </h4>
                            </div>
                            <div
                              className="small-12 columns margin-bottom--2x"
                            >
                              <r
                                field="adaPrioritiesSelected"
                              >
                                <c
                                  fieldApi={
                                    Object {
                                      "doneValidatingField": [Function],
                                      "getError": [Function],
                                      "getSuccess": [Function],
                                      "getTouched": [Function],
                                      "getValue": [Function],
                                      "getWarning": [Function],
                                      "registerAsyncValidation": [Function],
                                      "reset": [Function],
                                      "setError": [Function],
                                      "setSuccess": [Function],
                                      "setTouched": [Function],
                                      "setValue": [Function],
                                      "setWarning": [Function],
                                      "submits": 0,
                                      "submitted": false,
                                      "validatingField": [Function],
                                    }
                                  }
                                >
                                  <t
                                    defaultValues={Object {}}
                                    registerAsyncValidation={[Function]}
                                    reset={[Function]}
                                    submits={0}
                                    submitted={false}
                                    update={[Function]}
                                  >
                                    <Connect(t)
                                      defaultValues={Object {}}
                                      registerAsyncValidation={[Function]}
                                      reset={[Function]}
                                      store={
                                        Object {
                                          "dispatch": [Function],
                                          "getState": [Function],
                                          "replaceReducer": [Function],
                                          "subscribe": [Function],
                                          Symbol(observable): [Function],
                                        }
                                      }
                                      submits={0}
                                      submitted={false}
                                      update={[Function]}
                                    >
                                      <t
                                        defaultValues={Object {}}
                                        dispatch={[Function]}
                                        formState={
                                          Object {
                                            "asyncErrors": Object {},
                                            "asyncSuccesses": Object {},
                                            "asyncValidations": 0,
                                            "asyncWarnings": Object {},
                                            "errors": Object {},
                                            "submits": 0,
                                            "submitted": false,
                                            "successes": Object {},
                                            "touched": Object {},
                                            "validating": Object {},
                                            "validationFailed": Object {},
                                            "validationFailures": 0,
                                            "values": Object {},
                                            "warnings": Object {},
                                          }
                                        }
                                        registerAsyncValidation={[Function]}
                                        reset={[Function]}
                                        store={
                                          Object {
                                            "dispatch": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                            Symbol(observable): [Function],
                                          }
                                        }
                                        storeSubscription={
                                          Subscription {
                                            "listeners": Object {
                                              "clear": [Function],
                                              "get": [Function],
                                              "notify": [Function],
                                              "subscribe": [Function],
                                            },
                                            "onStateChange": [Function],
                                            "parentSub": undefined,
                                            "store": Object {
                                              "dispatch": [Function],
                                              "getState": [Function],
                                              "replaceReducer": [Function],
                                              "subscribe": [Function],
                                              Symbol(observable): [Function],
                                            },
                                            "unsubscribe": [Function],
                                          }
                                        }
                                        submits={0}
                                        submitted={false}
                                        update={[Function]}
                                      >
                                        <div
                                          className="small-6 columns"
                                        >
                                          <label>
                                            ADA Priorities Selected
                                          </label>
                                          <div
                                            className="checkbox-group"
                                            role="group"
                                          >
                                            <div
                                              className="form-item"
                                              key="0"
                                            >
                                              <div
                                                className="checkbox"
                                              >
                                                <r
                                                  field="Mobility impaired"
                                                  id="adaPrioritiesSelected-0"
                                                  name="adaPrioritiesSelected"
                                                >
                                                  <t
                                                    fieldApi={
                                                      Object {
                                                        "doneValidatingField": [Function],
                                                        "getError": [Function],
                                                        "getSuccess": [Function],
                                                        "getTouched": [Function],
                                                        "getValue": [Function],
                                                        "getWarning": [Function],
                                                        "registerAsyncValidation": [Function],
                                                        "reset": [Function],
                                                        "setError": [Function],
                                                        "setSuccess": [Function],
                                                        "setTouched": [Function],
                                                        "setValue": [Function],
                                                        "setWarning": [Function],
                                                        "submits": 0,
                                                        "submitted": false,
                                                        "validatingField": [Function],
                                                      }
                                                    }
                                                    id="adaPrioritiesSelected-0"
                                                    name="adaPrioritiesSelected"
                                                  >
                                                    <input
                                                      checked={false}
                                                      id="adaPrioritiesSelected-0"
                                                      name="adaPrioritiesSelected"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                    />
                                                  </t>
                                                </r>
                                                <label
                                                  htmlFor="adaPrioritiesSelected-0"
                                                >
                                                  Mobility impaired
                                                </label>
                                              </div>
                                            </div>
                                            <div
                                              className="form-item"
                                              key="1"
                                            >
                                              <div
                                                className="checkbox"
                                              >
                                                <r
                                                  field="Vision impaired"
                                                  id="adaPrioritiesSelected-1"
                                                  name="adaPrioritiesSelected"
                                                >
                                                  <t
                                                    fieldApi={
                                                      Object {
                                                        "doneValidatingField": [Function],
                                                        "getError": [Function],
                                                        "getSuccess": [Function],
                                                        "getTouched": [Function],
                                                        "getValue": [Function],
                                                        "getWarning": [Function],
                                                        "registerAsyncValidation": [Function],
                                                        "reset": [Function],
                                                        "setError": [Function],
                                                        "setSuccess": [Function],
                                                        "setTouched": [Function],
                                                        "setValue": [Function],
                                                        "setWarning": [Function],
                                                        "submits": 0,
                                                        "submitted": false,
                                                        "validatingField": [Function],
                                                      }
                                                    }
                                                    id="adaPrioritiesSelected-1"
                                                    name="adaPrioritiesSelected"
                                                  >
                                                    <input
                                                      checked={false}
                                                      id="adaPrioritiesSelected-1"
                                                      name="adaPrioritiesSelected"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                    />
                                                  </t>
                                                </r>
                                                <label
                                                  htmlFor="adaPrioritiesSelected-1"
                                                >
                                                  Vision impaired
                                                </label>
                                              </div>
                                            </div>
                                            <div
                                              className="form-item"
                                              key="2"
                                            >
                                              <div
                                                className="checkbox"
                                              >
                                                <r
                                                  field="Hearing impaired"
                                                  id="adaPrioritiesSelected-2"
                                                  name="adaPrioritiesSelected"
                                                >
                                                  <t
                                                    fieldApi={
                                                      Object {
                                                        "doneValidatingField": [Function],
                                                        "getError": [Function],
                                                        "getSuccess": [Function],
                                                        "getTouched": [Function],
                                                        "getValue": [Function],
                                                        "getWarning": [Function],
                                                        "registerAsyncValidation": [Function],
                                                        "reset": [Function],
                                                        "setError": [Function],
                                                        "setSuccess": [Function],
                                                        "setTouched": [Function],
                                                        "setValue": [Function],
                                                        "setWarning": [Function],
                                                        "submits": 0,
                                                        "submitted": false,
                                                        "validatingField": [Function],
                                                      }
                                                    }
                                                    id="adaPrioritiesSelected-2"
                                                    name="adaPrioritiesSelected"
                                                  >
                                                    <input
                                                      checked={false}
                                                      id="adaPrioritiesSelected-2"
                                                      name="adaPrioritiesSelected"
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                    />
                                                  </t>
                                                </r>
                                                <label
                                                  htmlFor="adaPrioritiesSelected-2"
                                                >
                                                  Hearing impaired
                                                </label>
                                              </div>
                                            </div>
                                          </div>
                                        </div>
                                      </t>
                                    </Connect(t)>
                                  </t>
                                </c>
                              </r>
                            </div>
                          </div>
                        </div>
                      </ReservedPrioritySection>
                      <PreferencesSection
                        formApi={
                          Object {
                            "addValue": [Function],
                            "asyncValidations": 0,
                            "doneValidatingField": [Function],
                            "errors": Object {},
                            "format": [Function],
                            "getError": [Function],
                            "getSuccess": [Function],
                            "getTouched": [Function],
                            "getValue": [Function],
                            "getWarning": [Function],
                            "registerAsyncValidation": [Function],
                            "removeValue": [Function],
                            "reset": [Function],
                            "resetAll": [Function],
                            "setAllValues": [Function],
                            "setError": [Function],
                            "setSuccess": [Function],
                            "setTouched": [Function],
                            "setValue": [Function],
                            "setWarning": [Function],
                            "submitForm": [Function],
                            "submits": 0,
                            "submitted": false,
                            "successes": Object {},
                            "swapValues": [Function],
                            "touched": Object {},
                            "validating": Object {},
                            "validatingField": [Function],
                            "validationFailed": Object {},
                            "validationFailures": 0,
                            "values": Object {},
                            "warnings": Object {},
                          }
                        }
                      >
                        <div
                          className="border-bottom margin-bottom--2x"
                        >
                          <h3>
                            Preferences
                          </h3>
                          <div
                            className="row"
                          >
                            <div
                              className="form-group"
                            >
                              <div
                                className="small-4 columns"
                              >
                                <button
                                  className="mb-4 mr-4 btn btn-success"
                                  disabled={true}
                                  onClick={[Function]}
                                  type="button"
                                >
                                  + Add Preference
                                </button>
                              </div>
                            </div>
                          </div>
                        </div>
                      </PreferencesSection>
                      <HouseholdIncomeSection>
                        <div
                          className="border-bottom margin-bottom--2x"
                        >
                          <h3>
                            Declared Household Income
                          </h3>
                          <div
                            className="row"
                          >
                            <div
                              className="small-6 columns"
                            >
                              <label>
                                Annual Income
                              </label>
                              <r
                                field="annualIncome"
                              >
                                <t
                                  fieldApi={
                                    Object {
                                      "doneValidatingField": [Function],
                                      "getError": [Function],
                                      "getSuccess": [Function],
                                      "getTouched": [Function],
                                      "getValue": [Function],
                                      "getWarning": [Function],
                                      "registerAsyncValidation": [Function],
                                      "reset": [Function],
                                      "setError": [Function],
                                      "setSuccess": [Function],
                                      "setTouched": [Function],
                                      "setValue": [Function],
                                      "setWarning": [Function],
                                      "submits": 0,
                                      "submitted": false,
                                      "validatingField": [Function],
                                    }
                                  }
                                >
                                  <input
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value=""
                                  />
                                </t>
                              </r>
                            </div>
                            <div
                              className="small-6 columns"
                            >
                              <label>
                                Housing Voucher/ Subsidy
                              </label>
                              <r
                                field="householdVouchersSubsidies"
                                options={
                                  Array [
                                    Object {
                                      "label": "true",
                                      "value": "true",
                                    },
                                    Object {
                                      "label": "false",
                                      "value": "false",
                                    },
                                    Object {
                                      "label": "Left Blank",
                                      "value": "Left Blank",
                                    },
                                  ]
                                }
                              >
                                <t
                                  fieldApi={
                                    Object {
                                      "doneValidatingField": [Function],
                                      "getError": [Function],
                                      "getSuccess": [Function],
                                      "getTouched": [Function],
                                      "getValue": [Function],
                                      "getWarning": [Function],
                                      "registerAsyncValidation": [Function],
                                      "reset": [Function],
                                      "setError": [Function],
                                      "setSuccess": [Function],
                                      "setTouched": [Function],
                                      "setValue": [Function],
                                      "setWarning": [Function],
                                      "submits": 0,
                                      "submitted": false,
                                      "validatingField": [Function],
                                    }
                                  }
                                  options={
                                    Array [
                                      Object {
                                        "label": "true",
                                        "value": "true",
                                      },
                                      Object {
                                        "label": "false",
                                        "value": "false",
                                      },
                                      Object {
                                        "label": "Left Blank",
                                        "value": "Left Blank",
                                      },
                                    ]
                                  }
                                >
                                  <select
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value={0}
                                  >
                                    <option
                                      disabled={true}
                                      value={0}
                                    >
                                      Select One...
                                    </option>
                                    <option
                                      key="true"
                                      value={1}
                                    >
                                      true
                                    </option>
                                    <option
                                      key="false"
                                      value={2}
                                    >
                                      false
                                    </option>
                                    <option
                                      key="Left Blank"
                                      value={3}
                                    >
                                      Left Blank
                                    </option>
                                  </select>
                                </t>
                              </r>
                            </div>
                          </div>
                        </div>
                      </HouseholdIncomeSection>
                      <DemographicInfoSection>
                        <r
                          field="demographics"
                        >
                          <c
                            fieldApi={
                              Object {
                                "doneValidatingField": [Function],
                                "getError": [Function],
                                "getSuccess": [Function],
                                "getTouched": [Function],
                                "getValue": [Function],
                                "getWarning": [Function],
                                "registerAsyncValidation": [Function],
                                "reset": [Function],
                                "setError": [Function],
                                "setSuccess": [Function],
                                "setTouched": [Function],
                                "setValue": [Function],
                                "setWarning": [Function],
                                "submits": 0,
                                "submitted": false,
                                "validatingField": [Function],
                              }
                            }
                          >
                            <t
                              registerAsyncValidation={[Function]}
                              reset={[Function]}
                              submits={0}
                              submitted={false}
                              update={[Function]}
                            >
                              <Connect(t)
                                registerAsyncValidation={[Function]}
                                reset={[Function]}
                                store={
                                  Object {
                                    "dispatch": [Function],
                                    "getState": [Function],
                                    "replaceReducer": [Function],
                                    "subscribe": [Function],
                                    Symbol(observable): [Function],
                                  }
                                }
                                submits={0}
                                submitted={false}
                                update={[Function]}
                              >
                                <t
                                  dispatch={[Function]}
                                  formState={
                                    Object {
                                      "asyncErrors": Object {},
                                      "asyncSuccesses": Object {},
                                      "asyncValidations": 0,
                                      "asyncWarnings": Object {},
                                      "errors": Object {},
                                      "submits": 0,
                                      "submitted": false,
                                      "successes": Object {},
                                      "touched": Object {},
                                      "validating": Object {},
                                      "validationFailed": Object {},
                                      "validationFailures": 0,
                                      "values": Object {},
                                      "warnings": Object {},
                                    }
                                  }
                                  registerAsyncValidation={[Function]}
                                  reset={[Function]}
                                  store={
                                    Object {
                                      "dispatch": [Function],
                                      "getState": [Function],
                                      "replaceReducer": [Function],
                                      "subscribe": [Function],
                                      Symbol(observable): [Function],
                                    }
                                  }
                                  storeSubscription={
                                    Subscription {
                                      "listeners": Object {
                                        "clear": [Function],
                                        "get": [Function],
                                        "notify": [Function],
                                        "subscribe": [Function],
                                      },
                                      "onStateChange": [Function],
                                      "parentSub": undefined,
                                      "store": Object {
                                        "dispatch": [Function],
                                        "getState": [Function],
                                        "replaceReducer": [Function],
                                        "subscribe": [Function],
                                        Symbol(observable): [Function],
                                      },
                                      "unsubscribe": [Function],
                                    }
                                  }
                                  submits={0}
                                  submitted={false}
                                  update={[Function]}
                                >
                                  <div
                                    className="border-bottom margin-bottom--2x"
                                  >
                                    <h3>
                                      Demographic Information
                                    </h3>
                                    <div
                                      className="row"
                                    >
                                      <div
                                        className="small-6 columns"
                                      >
                                        <label>
                                          Ethnicity
                                        </label>
                                        <r
                                          field="ethnicity"
                                          options={
                                            Array [
                                              Object {
                                                "label": "Hispanic/Latino",
                                                "value": "Hispanic/Latino",
                                              },
                                              Object {
                                                "label": "Not Hispanic/Latino",
                                                "value": "Not Hispanic/Latino",
                                              },
                                              Object {
                                                "label": "Decline to state",
                                                "value": "Decline to state",
                                              },
                                            ]
                                          }
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                            options={
                                              Array [
                                                Object {
                                                  "label": "Hispanic/Latino",
                                                  "value": "Hispanic/Latino",
                                                },
                                                Object {
                                                  "label": "Not Hispanic/Latino",
                                                  "value": "Not Hispanic/Latino",
                                                },
                                                Object {
                                                  "label": "Decline to state",
                                                  "value": "Decline to state",
                                                },
                                              ]
                                            }
                                          >
                                            <select
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value={0}
                                            >
                                              <option
                                                disabled={true}
                                                value={0}
                                              >
                                                Select One...
                                              </option>
                                              <option
                                                key="Hispanic/Latino"
                                                value={1}
                                              >
                                                Hispanic/Latino
                                              </option>
                                              <option
                                                key="Not Hispanic/Latino"
                                                value={2}
                                              >
                                                Not Hispanic/Latino
                                              </option>
                                              <option
                                                key="Decline to state"
                                                value={3}
                                              >
                                                Decline to state
                                              </option>
                                            </select>
                                          </t>
                                        </r>
                                      </div>
                                      <div
                                        className="small-6 columns"
                                      >
                                        <label>
                                          Race
                                        </label>
                                        <r
                                          field="race"
                                          options={
                                            Array [
                                              Object {
                                                "label": "American Indian/Alaskan Native",
                                                "value": "American Indian/Alaskan Native",
                                              },
                                              Object {
                                                "label": "Asian",
                                                "value": "Asian",
                                              },
                                              Object {
                                                "label": "Black/African American",
                                                "value": "Black/African American",
                                              },
                                              Object {
                                                "label": "Native Hawaiian/Other Pacific Islander",
                                                "value": "Native Hawaiian/Other Pacific Islander",
                                              },
                                              Object {
                                                "label": "White",
                                                "value": "White",
                                              },
                                              Object {
                                                "label": "American Indian/Alaskan Native and Black/African American",
                                                "value": "American Indian/Alaskan Native and Black/African American",
                                              },
                                              Object {
                                                "label": "American Indian/Alaskan Native and White",
                                                "value": "American Indian/Alaskan Native and White",
                                              },
                                              Object {
                                                "label": "Asian and White",
                                                "value": "Asian and White",
                                              },
                                              Object {
                                                "label": "Black/African American and White",
                                                "value": "Black/African American and White",
                                              },
                                              Object {
                                                "label": "Other/Multiracial",
                                                "value": "Other/Multiracial",
                                              },
                                              Object {
                                                "label": "Decline to state",
                                                "value": "Decline to state",
                                              },
                                            ]
                                          }
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                            options={
                                              Array [
                                                Object {
                                                  "label": "American Indian/Alaskan Native",
                                                  "value": "American Indian/Alaskan Native",
                                                },
                                                Object {
                                                  "label": "Asian",
                                                  "value": "Asian",
                                                },
                                                Object {
                                                  "label": "Black/African American",
                                                  "value": "Black/African American",
                                                },
                                                Object {
                                                  "label": "Native Hawaiian/Other Pacific Islander",
                                                  "value": "Native Hawaiian/Other Pacific Islander",
                                                },
                                                Object {
                                                  "label": "White",
                                                  "value": "White",
                                                },
                                                Object {
                                                  "label": "American Indian/Alaskan Native and Black/African American",
                                                  "value": "American Indian/Alaskan Native and Black/African American",
                                                },
                                                Object {
                                                  "label": "American Indian/Alaskan Native and White",
                                                  "value": "American Indian/Alaskan Native and White",
                                                },
                                                Object {
                                                  "label": "Asian and White",
                                                  "value": "Asian and White",
                                                },
                                                Object {
                                                  "label": "Black/African American and White",
                                                  "value": "Black/African American and White",
                                                },
                                                Object {
                                                  "label": "Other/Multiracial",
                                                  "value": "Other/Multiracial",
                                                },
                                                Object {
                                                  "label": "Decline to state",
                                                  "value": "Decline to state",
                                                },
                                              ]
                                            }
                                          >
                                            <select
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value={0}
                                            >
                                              <option
                                                disabled={true}
                                                value={0}
                                              >
                                                Select One...
                                              </option>
                                              <option
                                                key="American Indian/Alaskan Native"
                                                value={1}
                                              >
                                                American Indian/Alaskan Native
                                              </option>
                                              <option
                                                key="Asian"
                                                value={2}
                                              >
                                                Asian
                                              </option>
                                              <option
                                                key="Black/African American"
                                                value={3}
                                              >
                                                Black/African American
                                              </option>
                                              <option
                                                key="Native Hawaiian/Other Pacific Islander"
                                                value={4}
                                              >
                                                Native Hawaiian/Other Pacific Islander
                                              </option>
                                              <option
                                                key="White"
                                                value={5}
                                              >
                                                White
                                              </option>
                                              <option
                                                key="American Indian/Alaskan Native and Black/African American"
                                                value={6}
                                              >
                                                American Indian/Alaskan Native and Black/African American
                                              </option>
                                              <option
                                                key="American Indian/Alaskan Native and White"
                                                value={7}
                                              >
                                                American Indian/Alaskan Native and White
                                              </option>
                                              <option
                                                key="Asian and White"
                                                value={8}
                                              >
                                                Asian and White
                                              </option>
                                              <option
                                                key="Black/African American and White"
                                                value={9}
                                              >
                                                Black/African American and White
                                              </option>
                                              <option
                                                key="Other/Multiracial"
                                                value={10}
                                              >
                                                Other/Multiracial
                                              </option>
                                              <option
                                                key="Decline to state"
                                                value={11}
                                              >
                                                Decline to state
                                              </option>
                                            </select>
                                          </t>
                                        </r>
                                      </div>
                                      <div
                                        className="small-3 columns"
                                      >
                                        <label>
                                          Gender
                                        </label>
                                        <r
                                          field="gender"
                                          options={
                                            Array [
                                              Object {
                                                "label": "Female",
                                                "value": "Female",
                                              },
                                              Object {
                                                "label": "Male",
                                                "value": "Male",
                                              },
                                              Object {
                                                "label": "Genderqueer/Gender Non-binary",
                                                "value": "Genderqueer/Gender Non-binary",
                                              },
                                              Object {
                                                "label": "Trans Female",
                                                "value": "Trans Female",
                                              },
                                              Object {
                                                "label": "Trans Male",
                                                "value": "Trans Male",
                                              },
                                              Object {
                                                "label": "Not Listed",
                                                "value": "Not Listed",
                                              },
                                              Object {
                                                "label": "Decline to state",
                                                "value": "Decline to state",
                                              },
                                            ]
                                          }
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                            options={
                                              Array [
                                                Object {
                                                  "label": "Female",
                                                  "value": "Female",
                                                },
                                                Object {
                                                  "label": "Male",
                                                  "value": "Male",
                                                },
                                                Object {
                                                  "label": "Genderqueer/Gender Non-binary",
                                                  "value": "Genderqueer/Gender Non-binary",
                                                },
                                                Object {
                                                  "label": "Trans Female",
                                                  "value": "Trans Female",
                                                },
                                                Object {
                                                  "label": "Trans Male",
                                                  "value": "Trans Male",
                                                },
                                                Object {
                                                  "label": "Not Listed",
                                                  "value": "Not Listed",
                                                },
                                                Object {
                                                  "label": "Decline to state",
                                                  "value": "Decline to state",
                                                },
                                              ]
                                            }
                                          >
                                            <select
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value={0}
                                            >
                                              <option
                                                disabled={true}
                                                value={0}
                                              >
                                                Select One...
                                              </option>
                                              <option
                                                key="Female"
                                                value={1}
                                              >
                                                Female
                                              </option>
                                              <option
                                                key="Male"
                                                value={2}
                                              >
                                                Male
                                              </option>
                                              <option
                                                key="Genderqueer/Gender Non-binary"
                                                value={3}
                                              >
                                                Genderqueer/Gender Non-binary
                                              </option>
                                              <option
                                                key="Trans Female"
                                                value={4}
                                              >
                                                Trans Female
                                              </option>
                                              <option
                                                key="Trans Male"
                                                value={5}
                                              >
                                                Trans Male
                                              </option>
                                              <option
                                                key="Not Listed"
                                                value={6}
                                              >
                                                Not Listed
                                              </option>
                                              <option
                                                key="Decline to state"
                                                value={7}
                                              >
                                                Decline to state
                                              </option>
                                            </select>
                                          </t>
                                        </r>
                                      </div>
                                      <div
                                        className="small-3 columns"
                                      >
                                        <label>
                                          Gender Specify (if not listed)
                                        </label>
                                        <r
                                          field="genderOther"
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                          >
                                            <input
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value=""
                                            />
                                          </t>
                                        </r>
                                      </div>
                                      <div
                                        className="small-6 columns"
                                      >
                                        <label>
                                          Sex at birth
                                        </label>
                                        <r
                                          field="sexAtBirth"
                                          options={
                                            Array [
                                              Object {
                                                "label": "Female",
                                                "value": "Female",
                                              },
                                              Object {
                                                "label": "Male",
                                                "value": "Male",
                                              },
                                              Object {
                                                "label": "Decline to answer",
                                                "value": "Decline to answer",
                                              },
                                            ]
                                          }
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                            options={
                                              Array [
                                                Object {
                                                  "label": "Female",
                                                  "value": "Female",
                                                },
                                                Object {
                                                  "label": "Male",
                                                  "value": "Male",
                                                },
                                                Object {
                                                  "label": "Decline to answer",
                                                  "value": "Decline to answer",
                                                },
                                              ]
                                            }
                                          >
                                            <select
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value={0}
                                            >
                                              <option
                                                disabled={true}
                                                value={0}
                                              >
                                                Select One...
                                              </option>
                                              <option
                                                key="Female"
                                                value={1}
                                              >
                                                Female
                                              </option>
                                              <option
                                                key="Male"
                                                value={2}
                                              >
                                                Male
                                              </option>
                                              <option
                                                key="Decline to answer"
                                                value={3}
                                              >
                                                Decline to answer
                                              </option>
                                            </select>
                                          </t>
                                        </r>
                                      </div>
                                      <div
                                        className="small-6 columns"
                                      >
                                        <label>
                                          Sexual Orientation
                                        </label>
                                        <r
                                          field="sexualOrientation"
                                          options={
                                            Array [
                                              Object {
                                                "label": "Bisexual",
                                                "value": "Bisexual",
                                              },
                                              Object {
                                                "label": "Gay/Lesbian/Same-Gender Loving",
                                                "value": "Gay/Lesbian/Same-Gender Loving",
                                              },
                                              Object {
                                                "label": "Questioning/Unsure",
                                                "value": "Questioning/Unsure",
                                              },
                                              Object {
                                                "label": "Straight/Heterosexual",
                                                "value": "Straight/Heterosexual",
                                              },
                                              Object {
                                                "label": "Not listed",
                                                "value": "Not listed",
                                              },
                                              Object {
                                                "label": "Decline to state",
                                                "value": "Decline to state",
                                              },
                                            ]
                                          }
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                            options={
                                              Array [
                                                Object {
                                                  "label": "Bisexual",
                                                  "value": "Bisexual",
                                                },
                                                Object {
                                                  "label": "Gay/Lesbian/Same-Gender Loving",
                                                  "value": "Gay/Lesbian/Same-Gender Loving",
                                                },
                                                Object {
                                                  "label": "Questioning/Unsure",
                                                  "value": "Questioning/Unsure",
                                                },
                                                Object {
                                                  "label": "Straight/Heterosexual",
                                                  "value": "Straight/Heterosexual",
                                                },
                                                Object {
                                                  "label": "Not listed",
                                                  "value": "Not listed",
                                                },
                                                Object {
                                                  "label": "Decline to state",
                                                  "value": "Decline to state",
                                                },
                                              ]
                                            }
                                          >
                                            <select
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value={0}
                                            >
                                              <option
                                                disabled={true}
                                                value={0}
                                              >
                                                Select One...
                                              </option>
                                              <option
                                                key="Bisexual"
                                                value={1}
                                              >
                                                Bisexual
                                              </option>
                                              <option
                                                key="Gay/Lesbian/Same-Gender Loving"
                                                value={2}
                                              >
                                                Gay/Lesbian/Same-Gender Loving
                                              </option>
                                              <option
                                                key="Questioning/Unsure"
                                                value={3}
                                              >
                                                Questioning/Unsure
                                              </option>
                                              <option
                                                key="Straight/Heterosexual"
                                                value={4}
                                              >
                                                Straight/Heterosexual
                                              </option>
                                              <option
                                                key="Not listed"
                                                value={5}
                                              >
                                                Not listed
                                              </option>
                                              <option
                                                key="Decline to state"
                                                value={6}
                                              >
                                                Decline to state
                                              </option>
                                            </select>
                                          </t>
                                        </r>
                                      </div>
                                      <div
                                        className="small-6 columns"
                                      >
                                        <label>
                                          Sexual Orientation (if not listed)
                                        </label>
                                        <r
                                          field="sexualOrientationOther"
                                        >
                                          <t
                                            fieldApi={
                                              Object {
                                                "doneValidatingField": [Function],
                                                "getError": [Function],
                                                "getSuccess": [Function],
                                                "getTouched": [Function],
                                                "getValue": [Function],
                                                "getWarning": [Function],
                                                "registerAsyncValidation": [Function],
                                                "reset": [Function],
                                                "setError": [Function],
                                                "setSuccess": [Function],
                                                "setTouched": [Function],
                                                "setValue": [Function],
                                                "setWarning": [Function],
                                                "submits": 0,
                                                "submitted": false,
                                                "validatingField": [Function],
                                              }
                                            }
                                          >
                                            <input
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              value=""
                                            />
                                          </t>
                                        </r>
                                      </div>
                                    </div>
                                    <div
                                      className="row"
                                    />
                                  </div>
                                </t>
                              </Connect(t)>
                            </t>
                          </c>
                        </r>
                      </DemographicInfoSection>
                      <div
                        className="checkbox-group"
                        role="group"
                      >
                        <div
                          className="form-item"
                        >
                          <div
                            className="checkbox"
                          >
                            <r
                              field="agreeToTerms"
                              id="agreeToTerms"
                              name="agreeToTerms"
                            >
                              <t
                                fieldApi={
                                  Object {
                                    "doneValidatingField": [Function],
                                    "getError": [Function],
                                    "getSuccess": [Function],
                                    "getTouched": [Function],
                                    "getValue": [Function],
                                    "getWarning": [Function],
                                    "registerAsyncValidation": [Function],
                                    "reset": [Function],
                                    "setError": [Function],
                                    "setSuccess": [Function],
                                    "setTouched": [Function],
                                    "setValue": [Function],
                                    "setWarning": [Function],
                                    "submits": 0,
                                    "submitted": false,
                                    "validatingField": [Function],
                                  }
                                }
                                id="agreeToTerms"
                                name="agreeToTerms"
                              >
                                <input
                                  checked={false}
                                  id="agreeToTerms"
                                  name="agreeToTerms"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="checkbox"
                                />
                              </t>
                            </r>
                            <label
                              htmlFor="agreeToTerms"
                            >
                              Signature on Terms of Agreement
                            </label>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      className="button-pager"
                    >
                      <div
                        className="button-pager_row primary"
                      >
                        <button
                          className="primary radius margin-right"
                          disabled={false}
                          onClick={[Function]}
                          type="submit"
                        >
                          Save
                        </button>
                        <button
                          className="primary radius"
                          disabled={false}
                          onClick={[Function]}
                          type="submit"
                        >
                          Save and New
                        </button>
                      </div>
                      <div
                        className="button-pager_row primary"
                      >
                        <a
                          className="primary radius"
                          href="/listings"
                        >
                          Cancel
                        </a>
                      </div>
                    </div>
                  </div>
                </form>
              </t>
            </Connect(t)>
          </t>
        </div>
      </PaperApplicationForm>
    </ApplicationNewPageForm>
  </CardLayout>
</ApplicationNewPage>
`;
