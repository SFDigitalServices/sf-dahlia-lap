# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  puppeteer: threetreeslight/puppeteer@0.1.2
executors:
  ruby_node:
    docker:
      - image: 'circleci/ruby:2.7.0-node-browsers'
        environment:
          - RAILS_ENV: development
          - PGHOST: 127.0.0.1
          - PGUSER: root
      - image: circleci/node:12.16.1-browsers
        environment:
          - NODE_OPTIONS: --max_old_space_size=4096
    working_directory: ~/tmp
aliases:
  - &attach_workspace
    attach_workspace:
      at: ~/tmp
  - &restore_cache
    restore_cache:
        name: Restore Cache
        keys:
          - partners-{{ .Environment.CACHE_VERSION }}-yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
          - partners-{{ .Environment.CACHE_VERSION }}-yarn-packages-{{ .Branch }}
          - partners-{{ .Environment.CACHE_VERSION }}-yarn-packages-main
          - partners-{{ .Environment.CACHE_VERSION }}-yarn-packages-
          - partners-{{ .Environment.CACHE_VERSION }}-dependencies-{{ checksum "Gemfile.lock" }}
          - partners-{{ .Environment.CACHE_VERSION }}-dependencies-
jobs:
  build:
    executor: ruby_node
    steps:
      - checkout
      - *attach_workspace
      - *restore_cache
      - run:
          name: install dependencies
          command: |
            bundle install --deployment --path vendor/bundle
      - save_cache:
          paths:
            - ./bundle
          key: partners-{{ .Environment.CACHE_VERSION }}-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: install yarn dependencies
          command: yarn install --check-files
      - save_cache:
          name: Save Yarn Package Cache
          key: partners-{{ .Environment.CACHE_VERSION }}-yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules/
      - run: bundle exec rake db:setup
      - run: bundle exec rake db:test:prepare
      - run: bundle exec rake assets:precompile
      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
            ./tmp/cc-test-reporter before-build
      - persist_to_workspace:
          root: .
          paths:
            - .
  backend:
    executor: ruby_node
    steps:
      - checkout
      - *attach_workspace
      - *restore_cache
      - run: bundle --path vendor/bundle
      - run: bundle exec rubocop
      - run: bundle exec rake spec
      - run: ls .
      - store_artifacts:
          path: coverage
      - persist_to_workspace:
          root: .
          paths:
            - coverage
  frontend:
    executor: ruby_node
    steps:
      - checkout
      - *attach_workspace
      - *restore_cache
      - run: yarn lint
      - run: yarn unit
      - run: ls .
      - store_artifacts:
          path: coverage
      - persist_to_workspace:
          root: .
          paths:
            - coverage
  e2e:
    executor: ruby_node
    steps:
      - checkout
      - *attach_workspace
      - *restore_cache
      - puppeteer/install
      - run:
          name: install yarn dependencies
          command: yarn install --check-files
      - run: bundle --path vendor/bundle
      - run: bundle exec rake assets:precompile
      - run:
          name: Run rails server in background
          command: bundle exec rails server -p 3000
          background: true
      - run:
          name: Wait for server
          command: |
            until $(curl --retry 10 --output /dev/null --silent --head --fail http://127.0.0.1:3000); do
                printf '.'
                sleep 5
            done
      - run:
          name: App server test
          command: |
            wget localhost:3000
            cat index.html
      - run: yarn e2e
  coverage:
    executor: ruby_node
    steps:
      - checkout
      - *attach_workspace
      - run: ./tmp/cc-test-reporter format-coverage -t lcov -o tmp/codeclimate.frontend.json coverage/frontend/.resultset.json
      - run: ./tmp/cc-test-reporter format-coverage -t simplecov -o tmp/codeclimate.backend.json coverage/backend/.resultset.json
      - run: ./tmp/cc-test-reporter sum-coverage tmp/codeclimate.*.json -p 2 -o tmp/codeclimate.total.json
      - run: ./tmp/cc-test-reporter upload-coverage -i tmp/codeclimate.total.json
      - persist_to_workspace:
          root: .
          paths:
            - tmp/codeclimate.*.json
workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - build
      - backend:
          requires:
            - build
      - frontend:
          requires:
            - build
      - e2e:
          requires:
            - build
      - coverage:
          requires:
            - backend
            - frontend
