require_relative './mapping_helper.rb'

module ListingHelper
  def self.map_listing_fields(l)
    mappedListing = {
      owner: l && l.dig(:Owner, :Name),
      account: l && l.dig(:Account, :Name),
      open_houses: l && l[:Open_Houses],
      listing_lottery_preferences: l && l[:Listing_Lottery_Preferences] && l[:Listing_Lottery_Preferences].map { |p| MappingHelper.map_lottery_preferences(p)},
      units: l && l[:Units] && l[:Units].map { |u| MappingHelper.map_unit(u) },
      building: l && l.dig(:Building, :Name),
      id: l && l[:Id],
      owner_id: l && l[:OwnerId],
      application_due_date: l && l[:Application_Due_Date],
      name: l && l[:Name],
      status: l && l[:Status],
      min_br: l && l[:Min_BR],
      lotterry_winners: l && l[:Lottery_Winners],
      max_br: l && l[:Max_BR],
      lottery_results: l && l[:Lottery_Results],
      min_income: l && l[:Min_Income],
      max_income: l && l[:Max_Income],
      min_occupancy: l && l[:Min_Occupancy],
      max_occupancy: l && l[:Max_Occupancy],
      building_name: l && l[:Building_Name],
      neighborhood: l && l[:Neighborhood],
      building_street_address: l && l[:Building_Street_Address],
      developer: l && l[:Developer],
      building_city: l && l[:Building_City],
      building_url: l && l[:Building_URL],
      building_state: l && l[:Building_State],
      year_built: l && l[:Year_Built],
      building_zip_code: l && l[:Building_Zip_Code],
      description: l && l[:Description],
      lottery_prefrences: l && l[:Lottery_Preferences],
      acessibility: l && l[:Accessibility],
      fee: l && l[:Fee],
      amenities: l && l[:Amenities],
      deposit_min: l && l[:Deposit_Min],
      costs_not_included: l && l[:Costs_Not_Included],
      deposit_max: l && l[:Deposit_Max],
      lottery_date: l && l[:Lottery_Date],
      lottery_results_date: l && l[:Lottery_Results_Date],
      lottery_venue: l && l[:Lottery_Venue],
      lottery_summary: l && l[:Lottery_Summary],
      lottery_street_address: l && l[:Lottery_Street_Address],
      lottery_city: l && l[:Lottery_City],
      lottery_url: l && l[:Lottery_URL],
      reserved_community_type: l && l[:Reserved_community_type],
      application_phone: l && l[:Application_Phone],
      application_organization: l && l[:Application_Organization],
      application_street_address: l && l[:Application_Street_Address],
      application_city: l && l[:Application_City],
      download_url: l && l[:Download_URL],
      application_state: l && l[:Application_State],
      application_postal_code: l && l[:Application_Postal_Code],
      in_lottery: l && l[:In_Lottery],
      leasing_agent_name: l && l[:Leasing_Agent_Name],
      leasing_Agent_title: l && l[:Leasing_Agent_Title],
      leasing_agent_email: l && l[:Leasing_Agent_Email],
      leasing_agent_phone: l && l[:Leasing_Agent_Phone],
      legal_disclaimers: l && l[:Legal_Disclaimers],
      building_selection_criteria: l && l[:Building_Selection_Criteria],
      pet_policy: l && l[:Pet_Policy],
      report_id: l && l[:Report_id],
      required_documents: l && l[:Required_Documents],
      smoking_policy: l && l[:Smoking_Policy],
      eviction_history: l && l[:Eviction_History],
      criminal_history: l && l[:Criminal_History],
      credit_rating: l && l[:Credit_Rating],
      lottery_status: l && l[:Lottery_Status],
      office_hours: l && l[:Office_Hours],
      information_sessions: l && l[:Information_Sessions],
      nflagged_applications: l && l[:nFlagged_Applications],
      units_available: l && l[:Units_Available],
      lease_signed_application: l && l[:Lease_Signed_Application],
      last_modified_date: l && l[:LastModifiedDate],
      is_sale: l && l[:isSale],
      is_rental: l && l[:isRental]
    }
    mappedListing.compact!
  end
end